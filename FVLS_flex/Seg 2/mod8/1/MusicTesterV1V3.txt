import java.util.*;

/**
 * Purpose:
 *
 * @author Tejas Upadhyay
 * @version 3/1/2024
 *
 */
public class MusicTesterV1V3 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        // Moive List
        Music[] musicArray = new Music[10];
        createSongIntoList(musicArray);

        System.out.println("\nHere is your list: \n");
        printAllSong(musicArray);

        System.out.println("\nWhat year do you want to search for?");
        System.out.println("1. Song title");
        System.out.println("2. Song year");
        System.out.println("3. Song artist");
        int search = in.nextInt();

        if (search == 1) {
            System.out.println("What song title do you want to search for?");
            in.nextLine();
            String title = in.nextLine();
            sequentialSearchByTitle(musicArray, title);
        } else if (search == 2) {
            System.out.println("What year do you want to search for?");
            int year = in.nextInt();
            sequentialSearchByYear(musicArray, year);
        } else if (search == 3) {
            System.out.println("What artist do you want to search for?");
            in.nextLine();
            String artist = in.nextLine();
            sequentialSearchByArtist(musicArray, artist);
        }

        // Print the sorted movies
        // System.out.println("\nHere is your list: \n");
        // printAllSong(musicArray);
        in.close();
    }

    public static void sequentialSearchByTitle(Music[] r, String toFind) {
        int found = -1;

        for (int i = 0; i < r.length; i++) {
            if (r[i].getTitle().equalsIgnoreCase(toFind)) {
                found = i;
                System.out.println("We found " + toFind + " in the list");
                System.out.println(r[found]);
            }
        }

        if (found == -1) {
            System.out.println("We did not find " + toFind + " in the list");
        }

        // Print the sorted movies

    }

    public static void sequentialSearchByYear(Music[] r, int toFind) {
        int found = 0;

        System.out.println("Finding results...");
        for (int i = 0; i < r.length; i++) {
            if (r[i].getYear() == toFind) {
                System.out.println(r[i]);
                found++;
            }
        }

        if (found == 0) { // we have not found the location
            System.out.println(toFind + " is not in the roster");
        }
    }

    public static void sequentialSearchByArtist(Music[] r, String toFind) {
        int found = -1;

        for (int i = 0; i < r.length; i++) {
            if (r[i].getArtist().compareTo(toFind) == 0) {
                found = i;
                break; // terminates the for loop
            }
        }

        if (found != -1) { // we have found the person
            System.out.println("We found " + toFind + " in the list: ");
            System.out.println(r[found]);
        } else
            System.out.println(toFind + " is not in the list");
    }

    public static void createSongIntoList(Music[] musicArray) {
        musicArray[0] = new Music("Seven Nation Army", 2003, "The White Stripes");
        musicArray[1] = new Music("Beggin'", 2007, "Madcon");
        musicArray[2] = new Music("Alors on danse", 2009, "Stromae");
        musicArray[3] = new Music("Paint it, Black", 1966, "The Rolling Stones");
        musicArray[4] = new Music("Fairy Tale", 2009, "Alexander Rybak");
        musicArray[5] = new Music("Rasputin", 1978, "Boney M.");
        musicArray[6] = new Music("bad guy", 2019, "Billie Eilish");
        musicArray[7] = new Music("Skyfall", 2012, "Adele");
        musicArray[8] = new Music("Human", 2016, "Rag'n'Bone Man");
        musicArray[9] = new Music("Careless Whisper", 1984, "George Michael");

    }

    public static void printAllSong(Music[] musicList) {
        for (Music song : musicList) {
            System.out.println(song.toString());
        }
    }
}
